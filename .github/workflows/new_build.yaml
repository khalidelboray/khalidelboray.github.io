name: Jekyll Deploy

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install libgsl-dev
        run: sudo apt-get install -y libgsl-dev
      
      # - name: 📂 GitHub Checkout
      #   uses: actions/checkout@v2

      - name: 💎 setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7 # can change this to 2.7 or whatever version you prefer
      
      - name: Bundler Cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-


      # Clone the repo to a directory called repo
      - name: Clone the repo
        run: git clone ${{ github.repository.html_url }} repo

      # Change directory to the repo directory
      - name: Change directory to the repo directory
        run: cd repo
      # Install bundler
      - name: Install bundler
        run: gem install bundler
      
      # Install gems
      - name: Install gems
        run: bundle install --jobs=4 --retry=3 

      # Build the site
      - name: Build the site
        run: bundle exec jekyll build -V

      # Create a new folder with the contents of the _site folder for the gh-pages branch
      - name: Create a new folder with the contents of the _site folder for the gh-pages branch
        run: mkdir -p ../gh-pages
        
      
      # Copy the contents of the _site folder to the gh-pages folder
      - name: Copy the contents of the _site folder to the gh-pages folder
        run: cp -r _site/* ../gh-pages

      # set the gh-pages folder to be a git repo
      - name: set the gh-pages folder to be a git repo
        run: git init
        with:
          dir: ../gh-pages
      
      # Add remore origin to gh-pages directory
      - name: Add remore origin to gh-pages directory
        run: git remote add origin ${{ github.repository.html_url }}
        with:
          dir: ../gh-pages
      

       # Remove everything from the gh-pages branch
      - name: Remove everything from the gh-pages branch
        run: git branch -D gh-pages
        with:
          dir: ../gh-pages

      # Checkout the gh-pages branch
      - name: Checkout the gh-pages branch
        run: git checkout -b gh-pages
        with:
          dir: ../gh-pages

      # Change directory to the gh-pages folder
      - name: Change directory to the gh-pages folder
        run: cd ../gh-pages
      
      # Add all files to the gh-pages branch
      - name: Add all files to the gh-pages branch
        run: git add .

      # Commit the changes
      - name: Commit the changes
        run: git commit -m "Deployed to GitHub Pages"

      # Push the changes to the gh-pages branch
      - name: Push the changes to the gh-pages branch
        run: git push origin gh-pages

        

     
        
      # # Push the _site folder contents to gh-pages branch
      # - name: Push the _site folder contents to gh-pages branch
      #   run: git push origin gh-pages:gh-pages --force
        
      
      # # View _site folder contents
      # - name: 📂 View _site folder contents
      #   run: ls -la _site
      
      #       # Commit changes
      # # Create a new folder with the contents of _site directory
      # - name: 📂 Create a new folder with the contents of _site directory
      #   run: mkdir -p /tmp/jekyll-deploy
      #   env:
      #     GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i ${{ secrets.GIT_SSH_KEY }}"
      
      # # Copy the contents of _site to the new folder
      # - name: 📂 Copy the contents of _site to the new folder
      #   run: cp -r _site/* /tmp/jekyll-deploy

      # # Cd into the new folder
      # - name: 📂 Cd into the new folder
      #   run: cd /tmp/jekyll-deploy && pwd && git remote -v

      # # Add remote origin
      # - name: 📂 Add remote origin
      #   run: git remote add origin ${{ github.repository }}
      #   env:
      #     GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i ${{ secrets.GIT_SSH_KEY }}"

      # # Add files to the staging area
      # - name: 📂 Add files to the staging area
      #   run: git add -A
      #   env:
      #     GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i ${{ secrets.GIT_SSH_KEY }}"
      
      # - name: 📂 Commit changes
      #   run: git commit -m "Deployed with Jekyll"
      #   env:
      #     GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i ${{ secrets.GIT_SSH_KEY }}"
      
      # - name: 📂 Push changes
      #   run: git push origin gh-pages
      #   env:
      #     GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i ${{ secrets.GIT_SSH_KEY }}"
            
      


      # - name: 💾 GitHub Pages Push
      #   uses: ad-m/github-push-action@master
      #   with:
      #     remote: origin
      #     branch: gh-pages
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     message: "Push to GitHub Pages from ${{ env.GITHUB_ACTOR }}"
      #     force: true
      #     directory: _site
      # # Go back to repository root directory
      # - name: 🏗 Go back to repository root directory
      #   uses: actions/checkout@v1

      # # Delete _site directory and push changes to master branch
      # - name: 🗑️ Delete _site directory and push changes to master branch
      #   run: rm -rf _site 
      #   env:
      #     GIT_AUTHOR_NAME: ${{ github.actor }}
      #     GIT_AUTHOR_EMAIL: ${{ github.actor_email }}
      #     GIT_COMMITTER_NAME: ${{ github.actor }}
      #     GIT_COMMITTER_EMAIL: ${{ github.actor_email }}
      
